name: in-place
label: In-Place
tags: [sort, arrays, ordenacao]
text: |

    # In-Place

    Uma pessoa encontrou no chão uma ficha numerada para pegar brinde em uma loja. Quando chegou na loja, percebeu que havia muita gente e estavam todos enfileirados, mas sem respeitar a ordem das fichas.
    Ela precisava entrar na sua posição, mantendo as fichas menores atrás e as maiores na frente, mas sem se importar com a ordenação das mesmas. Implemente um método in-place que recebe um array não ordenado de fichas inteiras e posicione a ficha dessa pessoa no lugar.

    *Importante:* Considere que a ficha dela está no índice 0 do array.

    ## Entrada

    Seu programa deve ler uma linha, contendo uma sequências de inteiros separadas por espaços, que representam as fichas.

    ## Saída
    
    Seu programa deve imprimir cada troca realizada.
    Dica: Use ``Arrays.toString()`` para formatar a saída.

    
    ## Exemplos
    
        javac Solucao.java; java Solucao
        3 5 2 1 4
        [3, 2, 5, 1, 4]
        [3, 2, 1, 5, 4]
        [1, 2, 3, 5, 4]

        javac Solucao.java; java Solucao
        4 2 5 1 4
        [4, 2, 5, 1, 4]
        [4, 2, 1, 5, 4]
        [1, 2, 4, 5, 4]

tests:
-   category: public
    input: |
        3 5 2 1 4
    output: |
        [3, 2, 5, 1, 4]
        [3, 2, 1, 5, 4]
        [1, 2, 3, 5, 4]
-   category: public
    input: |
        4 2 5 1 4
    output: |
        [4, 2, 5, 1, 4]
        [4, 2, 1, 5, 4]
        [1, 2, 4, 5, 4]
-   input: |
        3 8 7 10 0 23 2 1 77 7
    output: |
        [3, 0, 7, 10, 8, 23, 2, 1, 77, 7]
        [3, 0, 2, 10, 8, 23, 7, 1, 77, 7]
        [3, 0, 2, 1, 8, 23, 7, 10, 77, 7]
        [1, 0, 2, 3, 8, 23, 7, 10, 77, 7]
-   input: |
        9 7 5 11 12 2 14 3 10 6
    output: |
        [9, 7, 5, 11, 12, 2, 14, 3, 10, 6]
        [9, 7, 5, 11, 12, 2, 14, 3, 10, 6]
        [9, 7, 5, 2, 12, 11, 14, 3, 10, 6]
        [9, 7, 5, 2, 3, 11, 14, 12, 10, 6]
        [9, 7, 5, 2, 3, 6, 14, 12, 10, 11]
        [6, 7, 5, 2, 3, 9, 14, 12, 10, 11]